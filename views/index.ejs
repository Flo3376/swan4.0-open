<!DOCTYPE html>
<html lang="fr">

<head>
    <!-- CSS de Bootstrap -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Popper.js, puis Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">



    <meta charset="UTF-8">
    <title>Éditeur de Configuration</title>
    <style>
        body {
            background-color: #333;
            color: #ccc;
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
        }

        input,
        textarea {
            background-color: #555;
            border: none;
            color: #ccc;
            padding: 10px;
            margin-top: 5px;
            width: 300px;
        }

        label {
            margin-top: 15px;
        }

        form {
            margin-top: 20px;
        }

        .submit-button {
            background-color: #007BFF;
            color: white;
            padding: 10px 20px;
            border: none;
            cursor: pointer;
            display: block;
            width: 300px;
            margin-bottom: 20px;
        }

        .section {
            margin-bottom: 40px;
        }

        h2 {
            color: #FFF;
        }
        
    </style>
</head>

<body>
    <h1>Éditeur de Configuration</h1>
    <form action="/" method="POST">
        <input class="submit-button" type="submit" value="Enregistrer les modifications">
        <hr>
        <div class="section">
            <h2>Module Listen <i class="fa fa-question-circle" style="font-size: 24px; color: #007BFF;"title="Reconnaissance vocale autonome et gratuite. Se déclenche par prénom, traite localement sans internet, accès micro requis."></i></h2>
            <label>Sauvegarde des demandes :</label>
            <input type="text" name="listen[path_input]" value="<%= config.listen.path_input %>" disabled title="Chaque commande vocale déclenchée est sauvegardée en fichier MP3 pour diagnostic en cas de non-compréhension."><br>
            <label>Grammar :</label>
            <input type="text" name="listen[grammar]" value="<%= config.listen.grammar %>" disabled title="Contient les commandes et actions, réinitialisé à chaque démarrage. Pour modifications, voir le fichier lexique."><br>
            
            <label>Language :</label>
            <input type="text" name="listen[language]" value="<%= config.listen.language %>" disabled><br>
            <label>Hotword :</label>
            <input type="text" name="listen[hotword]" value="<%= config.listen.hotword %>" title='Prénom de déclenchement : comme "Alexa", "Siri", ou "OK Google", mais choisissez le prénom que vous préférez!'><br>
            <label for="confidenceRange">Niveau de confiance :</label>
            <input type="range" id="confidenceRange" name="listen[confidence]" min="0.75" max="1.00" step="0.01"
                value="<%= config.listen.confidence %>" oninput="confidenceValue.value = this.value" title="Niveau de confiance : Ajustez pour influencer la précision des correspondances. Un niveau bas peut générer des erreurs; un niveau élevé exige une prononciation précise.">
            <output id="confidenceValue">
                <%= config.listen.confidence %>
            </output><br>
            <label>Debug Listen :</label>
            <input type="checkbox" name="listen[debug_listen]" <%=config.listen.debug_listen ? 'checked' : '' %>>
        </div>
        <hr>
        <div class="section">
            <h2>Module Mic <i class="fa fa-question-circle" style="font-size: 24px; color: #007BFF;"title="Optionnel, gère la reconnaissance vocale via Internet avec OpenAI. Nécessite un compte OpenAI payant pour fonctionner."></i></h2>
            <label>Sauvegarde des demandes :</label>
            <input type="text" name="mic[path_input]" value="<%= config.mic.path_input %>" disabled title="Chaque demande vocale faite est sauvegardée en fichier MP3 pour diagnostic en cas de non-compréhension."><br>
            <label>Debug Mic :</label>
            <input type="checkbox" name="mic[debug_mic]" <%=config.mic.debug_mic ? 'checked' : '' %>><br>
        </div>
        <hr>
        <div class="section">
            <h2 style="display: inline; margin-right: 10px;">Module OpenAI</h2>
            <h6 style="display: inline; color: gray; font-size: 0.75em;">optionnel</h6>
            <i class="fa fa-question-circle" style="font-size: 24px; color: #007BFF; vertical-align: middle;" title="La partie OpenAI comprend un des systèmes de reconnaissance vocale, l'intelligence qui répondra, et un des systèmes de création de voix. Nécessite un compte OpenAI payant pour fonctionner."></i><br>
            <label>API Key :</label>
            <input type="text" id="apiKey" name="openAI[apiKey]" value="<%= config.openAI.apiKey %>" onchange="checkAPIKey()" title="Votre clé API openAI"><br>
            <label>Assistant Name :</label>
            <input type="text" name="openAI[assistant_name]" value="<%= config.openAI.assistant_name %>" title="Nom de votre assitant sur votre dashboard openAI"><br>
            <label>Assistant ID :</label>
            <input type="text" name="openAI[assistant_id]" value="<%= config.openAI.assistant_id %>" title="Identifiant de votre assistant. Laisser vide pour un premier démarrage ou création d'un nouvelle assitant via votre dashboard"><br>
            <label>Thread ID :</label>
            <input type="text" id="thread_id" name="openAI[thread_id]" value="<%= config.openAI.thread_id %>" title="Identifiant unique pour suivre une conversation spécifique avec OpenAI. Laissez vide pour démarrer une nouvelle conversation."><br>
            <label>Modèle d'assistant :</label>
            <select id="modelSelect" name="openAI[model_assistant]" title="Choisissez le modèle OpenAI selon le coût et la puissance. Les modèles plus puissants comme 'gpt-4-turbo' offrent une meilleure performance mais sont plus coûteux, tandis que 'gpt-3.5-turbo-16k' est plus abordable mais moins puissant.">
                <option value="gpt-3.5-turbo-16k">GPT-3.5 Turbo 16k</option>
                <option value="gpt-4-turbo">GPT-4 Turbo</option>
            </select><br>
            <label>Voix de l'assistant :</label>
            <select id="voiceSelect" name="openAI[assistant_voice]" title="Si plus bas, openAI a été sélectioner pour vocaliser les réponses, vous pouvez utiliser les voix suivantes">
                <option value="alloy">alloy</option>
                <option value="echo">echo</option>
                <option value="fablek">fable</option>
                <option value="onyx">onyxo</option>
                <option value="nova">nova</option>
                <option value="shimmer">shimmer</option>
            </select><br>
            <label>Sauvegarde des réponse openAI :</label>
            <input type="text" name="openAI[path_output]" value="<%= config.openAI.path_output %>" disabled title="Chaque réponse vocal crée par openAI sera sauvegarder et trier par action."><br>
            
        </div>
        <hr>
        <div class="section">
            <h2>Push to talk  <i class="fa fa-question-circle" style="font-size: 24px; color: #007BFF;"title="Afin d'éviter de requête inutile et couteuse à openAI, la détection vocal payante peut être gérer par 2 push to talk (clavier et manette de jeux)"></i></h2>
            <label>Touche du clavier :</label>
            <input type="text" id="keyboard_key" name="push_to_talk.keyboard[keyboard_key]" value="<%= config.push_to_talk.keyboard.keyboard_key %>" title="La touche qui provoquera l'écoute sur openAI"><br><br>
            <label>Touche de la manette :</label><br>
            <label>vendorId :</label>
            <input type="text" id="apivendorIdKey" name="push_to_talk.joystick[vendorId]" value="<%= config.push_to_talk.joystick.vendorId %>" title="La touche qui provoquera l'écoute sur openAI"><br>
            <label>productId :</label>
            <input type="text" id="productId" name="push_to_talk.joystick[productId]" value="<%= config.push_to_talk.joystick.productId %>" title="La touche qui provoquera l'écoute sur openAI"><br>
            <label>tramId :</label>
            <input type="text" id="tramId" name="push_to_talk.joystick[tramId]" value="<%= config.push_to_talk.joystick.tramId %>" title="La touche qui provoquera l'écoute sur openAI"><br>
            <label>bp_Id :</label>
            <input type="text" id="apiKey" name="push_to_talk.joystick[bp_Id]" value="<%= config.push_to_talk.joystick.bp_Id %>" title="La touche qui provoquera l'écoute sur openAI"><br>
        </div>

        <div class="section">
            <h2>Module test</h2>
            <label for="listen_path_input">Chemin d'entrée :</label>
            <input type="text" id="listen_path_input" name="listen[path_input]" value="<%= config.listen.path_input %>"
                data-bs-toggle="tooltip" data-bs-placement="right"
                title="Spécifiez le chemin d'accès où les fichiers audio seront stockés.">

        </div>

        <!-- Ajoutez d'autres sections pour spotify, google, revoicer, etc. ici -->

        <input class="submit-button" type="submit" value="Enregistrer les modifications">
    </form>
</body>

</html>
<script>
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
        return new bootstrap.Tooltip(tooltipTriggerEl)
    });
</script>
<script>
    function checkAPIKey() {
        var apiKey = document.getElementById('apiKey').value.trim();
        var inputsToDisable = [document.getElementById('assistantID'), document.getElementById('modelSelect')];

        if (!apiKey) {
            // Disable inputs if API Key is empty
            inputsToDisable.forEach(function(input) {
                input.disabled = true;
                if (input.tagName === 'SELECT') {
                    input.value = 'gpt-3.5-turbo-16k'; // Forcing a specific selection
                }
            });
        } else {
            // Enable inputs if API Key is not empty
            inputsToDisable.forEach(function(input) {
                input.disabled = false;
            });
        }
    }

    // Check on initial load
    document.addEventListener('DOMContentLoaded', function () {
        checkAPIKey();
    });
</script>